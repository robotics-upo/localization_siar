<!--
-->
<launch>

  # Bag filename
  <arg name="bag_file" />
  <arg name="start" default="0"/>
  <arg name="camera" default="camera"/>
  <arg name="robot_frame" default="/base_link"/>
  <arg name="tolerance" default="0.15"/>
  <arg name="tf" default="true"/>
  <arg name="record" default="false"/>
  
  # Use simulation time 
  <param name="use_sim_time" value="true" />

  # Bag file
  <node name="bag_player" type="play" pkg="rosbag" args="$(arg bag_file) --clock -s $(arg start)" />
  
  # Uncompress depth
  <node name="republish_depth" type="republish" pkg="image_transport" args="compressedDepth in:=$(arg camera)/depth_registered/image_raw raw out:=$(arg camera)/depth_registered/image_raw"/>
  <node name="republish" type="republish" pkg="image_transport" args="compressed in:=$(arg camera)/rgb/image_raw raw out:=$(arg camera)/rgb/image_raw"/>
  
  # Launch plane detector
  <node name="test_wall_detector" type="test_wall_detector" pkg="wall_detector" output="screen" >
   <param name="camera" value="$(arg camera)"/>
   <param name="link_1" value="$(arg robot_frame)"/>
   <param name="link_2" value="$(arg camera)_depth_optical_frame"/>
  </node>

  # TF stuff
  <include file="$(find rgbd_launch)/launch/kinect_frames.launch" if="$(arg tf)">
    <arg name="camera" value="$(arg camera)"/>
  </include>
  <node name="static_tf" type="static_transform_publisher" pkg="tf" args="0 0 0 0 0 0 /base_link $(arg camera)_link 10" />
  
  # Representation
  <node name="rviz" type="rviz" pkg="rviz" args="-d $(find wall_detector)/launch/wall.rviz"/>
  <node name="rqt" type="rqt_gui" pkg="rqt_gui" args="-p $(find wall_detector)/launch/wall.perspective"/>

  # Record
  <node name="record" type="record" pkg="rosbag" args="wall_info -o wall_info"/>
  
</launch>