<!--
-->
<launch>

  # Bag filename
  <arg name="bag_file" default="/windows/Dataset/2018-06-12_sewers_pedralbes/siar_2018-06-12-10-54-51_short_filtered.bag"/>
  <arg name="play_bag" default="true"/>
  <arg name="rgbd_odom" default="true"/>
  <arg name="rate" default="1"/>
  <arg name="initial_x" default="96.24" /> <!-- 76 -157 0 2.7 0 0  76 -157 0 2.7 0 0 -->
  <arg name="initial_y" default="-182.72" /> <!-- initial_x=96.24 #Initial position (start 980)
initial_y=-182.72
initial_a=2.47 -->
  <arg name="initial_a" default="2.4" />
  <arg name="detector" default="false"/>
  <arg name="vis" default="true"/>
  <arg name="ground_truth" default="/windows/Dataset/2018-06-12_sewers_pedralbes/input_vector_ground_truth_b.txt"/>
  <arg name="ground_truth_out" default="/home/chur/Dataset/pedralbes/stats_gmapping.txt"/>
  <arg name="trajectory_file_python" default="/home/chur/Dataset/pedralbes/traj_gmapping.txt"/>
  <arg name="graph_file" default="pedralbes_graph"/>
  <arg name="base_frame_id" default="base_link"/>
  <arg name="odom_frame_id" default="odom"/>



  # Use simulation time fro TFs
  <param name="use_sim_time" value="true" />

  <arg name="camera" default="/up"/>
  <arg name="start" default="0"/>

  # Bag file
  <node name="bag_player" type="play" pkg="rosbag" args="$(arg bag_file) --clock -s $(arg start) -r $(arg rate)" if="$(arg play_bag)" output="screen"/>

  # Uncompress images and depth
  <node name="republish_img" type="republish" pkg="image_transport" output="screen" args="compressed in:=/front/rgb/image_raw raw out:=/front/rgb/image_raw"/>
  <node name="republish_depth" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/front/depth_registered/image_raw raw out:=/front/depth_registered/image_raw"/>
  <node name="republish_depth_2" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/up/depth_registered/image_raw raw out:=/up/depth_registered/image_raw"/>
  <node name="republish_depth_3" type="republish" pkg="image_transport" output="screen" args="compressedDepth in:=/back/depth_registered/image_raw raw out:=/back/depth_registered/image_raw"/>

  <node pkg="odom_to_tf" type="odom_to_tf.py" name="odom_to_tf" unless="$(arg rgbd_odom)">
    <param name="base_link" value="$(arg base_frame_id)"/>
    <param name="odometry_frame" value="$(arg odom_frame_id)"/>
  </node>

  <node name="rgbd_odom_node" type="rgbd_odom_node" pkg="rgbd_odom" if="$(arg rgbd_odom)" output="screen">
    <param name="camera_topic" value="/front" />
    <param name="tf_topic_out" value="/rgbd_odom/transform" />
    <param name="max_features" value="1000" />
    <param name="flow_threshold" value="10" />
    <param name="min_matches" value="15" />
    <param name="odom_frame_id" value="$(arg odom_frame_id)" />
    <param name="base_frame_id" value="$(arg base_frame_id)" />
    <param name="publish_image" value="true" />
    <param name="publish_point_cloud" value="true" />
    <param name="use_sba" value="false" />
    <param name="type_sba" value="1" />         # 0: MOTIONSTRUCTURE, 1: MOTION, 2: STRUCTURE (cvsba)
    <param name="max_keyframes" value="10" />
    <param name="use_imu" value="true" />
    <param name="imu_topic" value="/arduimu_v3/imu" />
    <param name="apply_downsampling" value="false" />
    <param name="pc_downsampling" value="0.1" />
    <param name="apply_crop" value="true" />
    <param name="pc_crop_dist" value="7.0" />
    <param name="apply_outlier" value="false" />
    <param name="pc_outlier_radius" value="0.4" />
    <param name="pc_outlier_neighbors" value="10" />
    <param name="ground_height_topic" value="/ground_estimator_node/ground_height" />
    <param name="ground_alpha" value="0.8" />
  </node>

<node name="sewer_graph" type="test_sewer_graph" pkg="sewer_graph" args="$(find sewer_graph)/test/$(arg graph_file)">
    <param name="global_frame_id" value="map" />
    <param name="edgeDev" value="0.3"/>

    <param name="initialize" value="false"/>

    <param name="sewer_graph_file" value=""/>

    <remap from="/amcl_sewer_node/initial_pose" to="/initialpose"/>
  </node>

  <node name="vis" type="rviz" pkg="rviz" args="-d $(find amcl_sewer)/launch/amcl_pure.rviz" if="$(arg vis)"/>

  <node name="ground_truth" type="ground_truth.py" pkg="manhole_detector" args="$(arg camera) $(arg ground_truth) $(arg ground_truth_out) $(arg trajectory_file_python) " output="screen" >
    <param name="base_frame_id" value="$(arg base_frame_id)" />

  </node>

  <node name="tf_global" type="static_transform_publisher" pkg="tf" args="$(arg initial_x) $(arg initial_y) 0 $(arg initial_a) 0 0 map world 10"/>

  <node name="gmapping" pkg="gmapping" type="slam_gmapping">
    <param name="map_frame" value="world"/>
  </node>

  <include file="$(find sensor_sims)/launch/2_images_to_scan.launch"/>
  <node name="laser_assembler" pkg="laser_assembler" type="laser_assembler" args="/front_scan /back_scan"/>

</launch>
